start: expr+

?expr: atom
     | list
     | lambda_expr

lambda_expr: "(" "lambda" "(" SYMBOL* ")" expr ")"

?atom: NUMBER      -> number
     | STRING      -> string
     | SYMBOL      -> var

?list: "(" form ")"

?form: "def" def_head expr                -> def_expr
      | "cond" cond_branch+ else_arm?     -> cond_expr
      | expr+                             -> call

?def_head: SYMBOL                         -> var
         | "(" SYMBOL SYMBOL* ")"         -> fun_def_head

cond_branch: "[" expr expr "]"
else_arm: "else" expr

SYMBOL: /[a-zA-Z_+\-*\/=<>!?$][a-zA-Z0-9_+\-*\/=<>!?]*/
NUMBER: /-?\d+(\.\d+)?/
STRING: ESCAPED_STRING

%import common.ESCAPED_STRING
%import common.WS
%ignore WS
